/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IForwardingSwapProxy,
  IForwardingSwapProxyInterface,
} from "../IForwardingSwapProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeTotal",
        type: "uint256",
      },
    ],
    name: "ProxySwapWithFee",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Extension",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "contract IERC20Extension",
        name: "_toToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IForwardingSwapProxy.SwapParams",
        name: "_swapParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_gasRefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumReturnAmount",
        type: "uint256",
      },
    ],
    name: "proxySwapWithFee",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class IForwardingSwapProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IForwardingSwapProxyInterface {
    return new utils.Interface(_abi) as IForwardingSwapProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IForwardingSwapProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IForwardingSwapProxy;
  }
}
